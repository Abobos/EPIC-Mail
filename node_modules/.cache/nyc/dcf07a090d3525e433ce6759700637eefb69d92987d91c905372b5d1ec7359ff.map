{"version":3,"sources":["usersControllers.js"],"names":["UsersControllers","req","res","body","error","status","json","details","message","replace","getuser","users","find","k","email","payload","firstname","lastname","password","userToken","jwt","sign","expiresIn","user","id","length","authData","push","data","token"],"mappings":"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","sourceRoot":"C:\\Users\\Blessing Abobo\\EPIC-Mail\\Server\\controllers","sourcesContent":["\nimport jwt from 'jsonwebtoken';\nimport { users } from '../dummy/database';\nimport { validateUserSignUpDetails, validateUserSignInDetails } from '../middlewares/validateUserDetails';\n\n\nclass UsersControllers {\n// eslint-disable-next-line class-methods-use-this\n  static userSignUp(req, res) {\n    const { error } = validateUserSignUpDetails(req.body);\n    if (error) {\n      return res.status(400).json({\n        status: 400,\n        error: error.details[0].message.replace(/[\"\"]+/g, ''),\n      });\n    }\n    const getuser = users.find(k => k.email === req.body.email);\n    if (getuser) {\n      return res.status(409).json({\n        status: 409,\n        error: 'User already exists, Sign In!',\n      });\n    }\n    const payload = {\n      firstname: req.body.firstname,\n      lastname: req.body.lastname,\n      email: req.body.email,\n      password: req.body.password,\n    };\n    const userToken = jwt.sign(payload, 'secret', { expiresIn: 1440 });\n    const user = {\n      id: users.length + 1,\n      firstname: req.body.firstname,\n      lastname: req.body.lastname,\n      email: req.body.email,\n      password: req.body.password,\n      authData: userToken,\n    };\n    users.push(user);\n    return res.status(201).json({\n      status: 201,\n      data: [\n        {\n          token: userToken,\n        },\n      ],\n    });\n  }\n\n  static userSignIn(req, res) {\n    const { error } = validateUserSignInDetails(req.body);\n    if (error) {\n      return res.status(400).json({\n        status: 400,\n        error: error.details[0].message.replace(/[\"\"]+/g, ''),\n      });\n    }\n    const user = users.find(k => k.email === req.body.email);\n    const { authData, password } = user;\n    if (!user) {\n      return res.status(404).json({\n        status: 404,\n        error: 'Details not found, Sign Up!',\n      });\n    }\n    if (password !== req.body.password) {\n      return res.status(401).json({\n        status: 401,\n        error: 'Incorrect password!',\n      });\n    }\n    return res.status(200).json({\n      status: 200,\n      data: [\n        {\n          token: authData,\n        },\n      ],\n    });\n  }\n}\n\n\nexport default UsersControllers;\n"]}