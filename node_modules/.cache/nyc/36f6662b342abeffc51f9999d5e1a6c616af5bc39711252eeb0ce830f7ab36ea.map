{"version":3,"sources":["messages.v1.Controllers.js"],"names":["messagesControllers","req","res","body","error","status","json","details","message","replace","data","id","messages","length","createdOn","Date","toLocaleString","subject","parentMessageId","receivedMessage","filter","receivedUnreadMessage","receivedSentMessage","messageId","Number","params","Id","getMessage","find","m","messageIndex","indexOf","splice"],"mappings":"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","sourceRoot":"/Users/andela/Documents/EPIC-Mail/src/Server/controllers","sourcesContent":["/* eslint-disable no-console */\r\nimport messages from '../database/messages.v1';\r\nimport validateMessageDetails from '../middlewares/validateMessageDetails';\r\n\r\nclass messagesControllers {\r\n  static sendMessage(req, res) {\r\n    const { error } = validateMessageDetails(req.body);\r\n    if (error) {\r\n      return res.status(400).json({\r\n        status: 400,\r\n        error: error.details[0].message.replace(/[\"\"]+/g, ''),\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [\r\n        {\r\n          id: messages.length + 1,\r\n          createdOn: (new Date().toLocaleString()),\r\n          subject: req.body.subject,\r\n          message: req.body.message,\r\n          parentMessageId: messages.length + 1,\r\n          status: 'sent',\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  static receivedMessage(req, res) {\r\n    const receivedMessage = messages.filter(message => message.status === 'read');\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [\r\n        receivedMessage,\r\n      ],\r\n    });\r\n  }\r\n\r\n  static receivedUnreadMessage(req, res) {\r\n    const receivedUnreadMessage = messages.filter(message => message.status === 'unread');\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [\r\n        receivedUnreadMessage,\r\n      ],\r\n    });\r\n  }\r\n\r\n  static receivedSentMessage(req, res) {\r\n    const receivedSentMessage = messages.filter(message => message.status === 'sent');\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [\r\n        receivedSentMessage,\r\n      ],\r\n    });\r\n  }\r\n\r\n  static getUserMessage(req, res) {\r\n    const messageId = Number(req.params.Id);\r\n    const getMessage = messages.find(m => m.id === messageId);\r\n    if (!getMessage) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'The message with the given id was not found',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [\r\n        getMessage,\r\n      ],\r\n    });\r\n  }\r\n\r\n  static DeleteMessage(req, res) {\r\n    const messageId = Number(req.params.Id);\r\n    const getMessage = messages.find(m => m.id === messageId);\r\n    if (!getMessage) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'The message with the given id was not found',\r\n      });\r\n    }\r\n    const messageIndex = messages.indexOf(getMessage);\r\n    messages.splice(messageIndex, 1);\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [\r\n        {\r\n          message: getMessage.message,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n}\r\n\r\nexport default messagesControllers;\r\n"]}