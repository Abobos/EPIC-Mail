{"version":3,"sources":["app.js"],"names":["dotenv","config","app","port","process","env","PORT","use","bodyParser","json","urlencoded","extended","get","req","res","send","usersRouter","messagesRouter","redirect","all","status","error","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,gBAAOC,MAAP;;AACA,IAAMC,GAAG,GAAG,uBAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAzB;AAEAJ,GAAG,CAACK,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQC,oBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEAT,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAAS,sBAAT,CAAd;AAAA,CAAb;AACAb,GAAG,CAACK,GAAJ,CAAQ,cAAR,EAAwBS,oBAAxB;AACAd,GAAG,CAACK,GAAJ,CAAQ,SAAR,EAAmBU,uBAAnB;AACAf,GAAG,CAACU,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACI,QAAJ,CAAa,qCAAb,CAAd;AAAA,CAAxB;AAEAhB,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,UAACN,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB;AAC9CW,IAAAA,MAAM,EAAE,KADsC;AAE9CC,IAAAA,KAAK,EAAE;AAFuC,GAArB,CAAd;AAAA,CAAb;AAKAnB,GAAG,CAACoB,MAAJ,CAAWnB,IAAX,EAAiB,YAAM;AACrB;AACAoB,EAAAA,OAAO,CAACC,GAAR,iCAAqCrB,IAArC;AACD,CAHD;eAMeD,G","sourceRoot":"C:\\Users\\Blessing Abobo\\EPIC-Mail\\src","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport dotenv from 'dotenv';\nimport usersRouter from './Server/routes/usersRoutes';\nimport messagesRouter from './Server/routes/messagesRoutes';\n\ndotenv.config();\nconst app = express();\nconst port = process.env.PORT;\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.get('/', (req, res) => res.send('Welcome to EPIC Mail'));\napp.use('/api/v1/auth', usersRouter);\napp.use('/api/v1', messagesRouter);\napp.get('/api/v1/docs', (req, res) => res.redirect('https://epicmail11.docs.apiary.io/#'));\n\napp.all('*', (req, res) => res.status(404).json({\n  status: '404',\n  error: 'Ths route is unavailable',\n}));\n\napp.listen(port, () => {\n  // eslint-disable-next-line no-console\n  console.log(`Listening to the port ${port}`);\n});\n\n\nexport default app;\n"]}