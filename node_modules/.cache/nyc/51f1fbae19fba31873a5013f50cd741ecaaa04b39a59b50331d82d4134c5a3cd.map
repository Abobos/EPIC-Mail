{"version":3,"sources":["usersControllers.js"],"names":["UsersControllers","req","res","body","error","status","json","details","message","replace","getuser","users","find","k","email","payload","firstname","lastname","password","userToken","jwt","sign","expiresIn","user","id","length","authData","push","data","token"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;;;;;;;IAGMA,gB;;;;;;;;;AACN;+BACoBC,G,EAAKC,G,EAAK;AAAA,kCACR,oDAA0BD,GAAG,CAACE,IAA9B,CADQ;AAAA,UAClBC,KADkB,yBAClBA,KADkB;;AAE1B,UAAIA,KAAJ,EAAW;AACT,eAAOF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,UAAAA,MAAM,EAAE,GADkB;AAE1BD,UAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC,OAAjB,CAAyBC,OAAzB,CAAiC,QAAjC,EAA2C,EAA3C;AAFmB,SAArB,CAAP;AAID;;AACD,UAAMC,OAAO,GAAGC,eAAMC,IAAN,CAAW,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,KAAF,KAAYb,GAAG,CAACE,IAAJ,CAASW,KAAzB;AAAA,OAAZ,CAAhB;;AACA,UAAIJ,OAAJ,EAAa;AACX,eAAOR,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,UAAAA,MAAM,EAAE,GADkB;AAE1BD,UAAAA,KAAK,EAAE;AAFmB,SAArB,CAAP;AAID;;AACD,UAAMW,OAAO,GAAG;AACdC,QAAAA,SAAS,EAAEf,GAAG,CAACE,IAAJ,CAASa,SADN;AAEdC,QAAAA,QAAQ,EAAEhB,GAAG,CAACE,IAAJ,CAASc,QAFL;AAGdH,QAAAA,KAAK,EAAEb,GAAG,CAACE,IAAJ,CAASW,KAHF;AAIdI,QAAAA,QAAQ,EAAEjB,GAAG,CAACE,IAAJ,CAASe;AAJL,OAAhB;;AAMA,UAAMC,SAAS,GAAGC,sBAAIC,IAAJ,CAASN,OAAT,EAAkB,QAAlB,EAA4B;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAA5B,CAAlB;;AACA,UAAMC,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAEb,eAAMc,MAAN,GAAe,CADR;AAEXT,QAAAA,SAAS,EAAEf,GAAG,CAACE,IAAJ,CAASa,SAFT;AAGXC,QAAAA,QAAQ,EAAEhB,GAAG,CAACE,IAAJ,CAASc,QAHR;AAIXH,QAAAA,KAAK,EAAEb,GAAG,CAACE,IAAJ,CAASW,KAJL;AAKXI,QAAAA,QAAQ,EAAEjB,GAAG,CAACE,IAAJ,CAASe,QALR;AAMXQ,QAAAA,QAAQ,EAAEP;AANC,OAAb;;AAQAR,qBAAMgB,IAAN,CAAWJ,IAAX;;AACA,aAAOrB,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,GADkB;AAE1BuB,QAAAA,IAAI,EAAE,CACJ;AACEC,UAAAA,KAAK,EAAEV;AADT,SADI;AAFoB,OAArB,CAAP;AAQD;;;+BAEiBlB,G,EAAKC,G,EAAK;AAAA,kCACR,oDAA0BD,GAAG,CAACE,IAA9B,CADQ;AAAA,UAClBC,KADkB,yBAClBA,KADkB;;AAE1B,UAAIA,KAAJ,EAAW;AACT,eAAOF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,UAAAA,MAAM,EAAE,GADkB;AAE1BD,UAAAA,KAAK,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC,OAAjB,CAAyBC,OAAzB,CAAiC,QAAjC,EAA2C,EAA3C;AAFmB,SAArB,CAAP;AAID;;AACD,UAAMc,IAAI,GAAGZ,eAAMC,IAAN,CAAW,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,KAAF,KAAYb,GAAG,CAACE,IAAJ,CAASW,KAAzB;AAAA,OAAZ,CAAb;;AACA,UAAI,CAACS,IAAL,EAAW;AACT,eAAOrB,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,UAAAA,MAAM,EAAE,GADkB;AAE1BD,UAAAA,KAAK,EAAE;AAFmB,SAArB,CAAP;AAID;;AAdyB,UAelBsB,QAfkB,GAeKH,IAfL,CAelBG,QAfkB;AAAA,UAeRR,QAfQ,GAeKK,IAfL,CAeRL,QAfQ;;AAgB1B,UAAIA,QAAQ,KAAKjB,GAAG,CAACE,IAAJ,CAASe,QAA1B,EAAoC;AAClC,eAAOhB,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,UAAAA,MAAM,EAAE,GADkB;AAE1BD,UAAAA,KAAK,EAAE;AAFmB,SAArB,CAAP;AAID;;AACD,aAAOF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,GADkB;AAE1BuB,QAAAA,IAAI,EAAE,CACJ;AACEC,UAAAA,KAAK,EAAEH;AADT,SADI;AAFoB,OAArB,CAAP;AAQD;;;;;;eAIY1B,gB","sourceRoot":"C:\\Users\\Blessing Abobo\\EPIC-Mail\\Server\\controllers","sourcesContent":["\r\nimport jwt from 'jsonwebtoken';\r\nimport users from '../database/users';\r\nimport { validateUserSignUpDetails, validateUserSignInDetails } from '../middlewares/validateUserDetails';\r\n\r\n\r\nclass UsersControllers {\r\n// eslint-disable-next-line class-methods-use-this\r\n  static userSignUp(req, res) {\r\n    const { error } = validateUserSignUpDetails(req.body);\r\n    if (error) {\r\n      return res.status(400).json({\r\n        status: 400,\r\n        error: error.details[0].message.replace(/[\"\"]+/g, ''),\r\n      });\r\n    }\r\n    const getuser = users.find(k => k.email === req.body.email);\r\n    if (getuser) {\r\n      return res.status(409).json({\r\n        status: 409,\r\n        error: 'User already exists, Sign In!',\r\n      });\r\n    }\r\n    const payload = {\r\n      firstname: req.body.firstname,\r\n      lastname: req.body.lastname,\r\n      email: req.body.email,\r\n      password: req.body.password,\r\n    };\r\n    const userToken = jwt.sign(payload, 'secret', { expiresIn: 1440 });\r\n    const user = {\r\n      id: users.length + 1,\r\n      firstname: req.body.firstname,\r\n      lastname: req.body.lastname,\r\n      email: req.body.email,\r\n      password: req.body.password,\r\n      authData: userToken,\r\n    };\r\n    users.push(user);\r\n    return res.status(201).json({\r\n      status: 201,\r\n      data: [\r\n        {\r\n          token: userToken,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  static userSignIn(req, res) {\r\n    const { error } = validateUserSignInDetails(req.body);\r\n    if (error) {\r\n      return res.status(400).json({\r\n        status: 400,\r\n        error: error.details[0].message.replace(/[\"\"]+/g, ''),\r\n      });\r\n    }\r\n    const user = users.find(k => k.email === req.body.email);\r\n    if (!user) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'Details not found, Sign Up!',\r\n      });\r\n    }\r\n    const { authData, password } = user;\r\n    if (password !== req.body.password) {\r\n      return res.status(401).json({\r\n        status: 401,\r\n        error: 'Incorrect password!',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [\r\n        {\r\n          token: authData,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default UsersControllers;\r\n"]}