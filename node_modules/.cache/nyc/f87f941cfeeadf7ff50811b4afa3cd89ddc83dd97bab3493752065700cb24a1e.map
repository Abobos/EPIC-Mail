{"version":3,"sources":["messagesControllers.js"],"names":["messagesControllers","req","res","body","error","status","json","details","message","replace","data","id","messages","length","createdOn","Date","toLocaleString","subject","parentMessageId","receivedMessage","filter","receivedUnreadMessage","receivedSentMessage","messageId","Number","params","Id","getMessage","find","m","getmessage","messageIndex","indexOf","splice"],"mappings":"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","sourceRoot":"C:\\Users\\Blessing Abobo\\EPIC-Mail\\Server\\controllers","sourcesContent":["/* eslint-disable no-console */\nimport messages from '../database/messages';\nimport validateMessageDetails from '../middlewares/validateMessageDetails';\n\nclass messagesControllers {\n  static sendMessage(req, res) {\n    const { error } = validateMessageDetails(req.body);\n    if (error) {\n      return res.status(400).json({\n        status: 400,\n        error: error.details[0].message.replace(/[\"\"]+/g, ''),\n      });\n    }\n    return res.status(200).json({\n      status: 200,\n      data: [\n        {\n          id: messages.length + 1,\n          createdOn: (new Date().toLocaleString()),\n          subject: req.body.subject,\n          message: req.body.message,\n          parentMessageId: messages.length + 1,\n          status: 'sent',\n        },\n      ],\n    });\n  }\n\n  static receivedMessage(req, res) {\n    const receivedMessage = messages.filter(message => message.status === 'read');\n    return res.status(200).json({\n      status: 200,\n      data: [\n        receivedMessage,\n      ],\n    });\n  }\n\n  static receivedUnreadMessage(req, res) {\n    const receivedUnreadMessage = messages.filter(message => message.status === 'unread');\n    return res.status(200).json({\n      status: 200,\n      data: [\n        receivedUnreadMessage,\n      ],\n    });\n  }\n\n  static receivedSentMessage(req, res) {\n    const receivedSentMessage = messages.filter(message => message.status === 'sent');\n    return res.status(200).json({\n      status: 200,\n      data: [\n        receivedSentMessage,\n      ],\n    });\n  }\n\n  static getUserMessage(req, res) {\n    const messageId = Number(req.params.Id);\n    const getMessage = messages.find(m => m.id === messageId);\n    if (!getMessage) {\n      return res.status(404).json({\n        status: 404,\n        error: 'The message with the given id was not found',\n      });\n    }\n    return res.status(200).json({\n      status: 200,\n      data: [\n        getMessage,\n      ],\n    });\n  }\n\n  static DeleteMessage(req, res) {\n    const messageId = Number(req.params.Id);\n    const getmessage = messages.find(m => m.id === messageId);\n    if (!getmessage) {\n      return res.status(404).json({\n        status: 404,\n        error: 'The message with the given id was not found',\n      });\n    }\n    const messageIndex = messages.indexOf(getmessage);\n    messages.splice(messageIndex, 1);\n    return res.status(200).json({\n      status: 200,\n      data: [\n        getmessage.message,\n      ],\n    });\n  }\n}\n\nexport default messagesControllers;\n"]}